services:
  db:
    image: postgres:16-alpine
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - '5432:5432'
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}']
      interval: 5s
      timeout: 5s
      retries: 20

  api:
    profiles:
      - prod
    build:
      context: .
      dockerfile: Dockerfile
      target: prod
    environment:
      NODE_ENV: production
      PORT: 3000
      DATABASE_URL: ${DATABASE_URL}
    depends_on:
      db:
        condition: service_healthy
    ports:
      - '3000:3000'

  api-dev:
    profiles:
      - dev
    build:
      context: .
      dockerfile: Dockerfile
      target: dev
    environment:
      NODE_ENV: development
      PORT: 3000
      DATABASE_URL: 'postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}'
      CHOKIDAR_USEPOLLING: '1'
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./:/app
      - /app/node_modules
    command: ['npm', 'run', 'dev']
    ports:
      - 3000:3000

volumes:
  db_data: {}
